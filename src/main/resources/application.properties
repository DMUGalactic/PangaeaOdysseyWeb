spring.application.name=PangaeaOdyssey

server.port=8081

# DataSource ??
spring.datasource.url=jdbc:mysql://localhost:3306/pangaeaodyssey?useSSL=false&characterEncoding=UTF-8&serverTimezone=UTC
spring.datasource.username=root
spring.datasource.password=root
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# JPA ??
#create-drop? ??????? ?? ??? ??? ??? ???? ?? ???? ???? update? ????
spring.jpa.hibernate.ddl-auto=create-drop
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.show_sql=true

# ?? ??
logging.level.com.tutorial=debug
spring.jpa.show-sql=true
spring.jpa.database-platform=org.hibernate.dialect.MySQL8Dialect
spring.jpa.database=mysql
spring.jpa.hibernate.naming.strategy=org.hibernate.cfg.ImprovedNamingStrategy
spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
spring.jpa.generate-ddl=false
spring.jpa.properties.hibernate.enable_lazy_load_no_trans=true
# JWT
jwt.access.expiration=3600000
jwt.access.header=Authorization

jwt.refresh.expiration=1209600000
jwt.refresh.header=Authorization-refresh

#registration ???
spring.security.oauth2.client.registration.naver.client-name=naver
spring.security.oauth2.client.registration.naver.redirect-uri=http://localhost:8080/login/oauth2/code/naver
spring.security.oauth2.client.registration.naver.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.naver.scope=name,email,nickname,filename

#provider ???? ???? ?? ?? ???? ????? ?? ? ?? ? (???)
#spring.security.oauth2.client.provider.????.authorization-uri=??? ??? ? ??
#spring.security.oauth2.client.provider.????.token-uri=?? ?? ?? ??
#spring.security.oauth2.client.provider.????.user-info-uri=??? ?? ?? ??
#spring.security.oauth2.client.provider.????.user-name-attribute=?? ??? ??

spring.security.oauth2.client.provider.naver.authorization-uri=https://nid.naver.com/oauth2.0/authorize
spring.security.oauth2.client.provider.naver.token-uri=https://nid.naver.com/oauth2.0/token
spring.security.oauth2.client.provider.naver.user-info-uri=https://openapi.naver.com/v1/nid/me
spring.security.oauth2.client.provider.naver.user-name-attribute=response

#registration ??
spring.security.oauth2.client.registration.google.client-name=google
spring.security.oauth2.client.registration.google.redirect-uri=http://localhost:8080/login/oauth2/code/google
spring.security.oauth2.client.registration.google.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.google.scope=profile,email
#삭제할 것들(커밋)